name: build x86_64-pc-linux-gnu
on: [push]
jobs:
  x86_64-pc-linux-gnu:
    runs-on: ubuntu-rolling
    steps:
      - run: apt-get update
      - run: apt-get install -y g++ git cmake nodejs wget unzip pkg-config zlib1g-dev nlohmann-json3-dev libgit2-dev libicu-dev libldap2-dev libsasl2-dev
      - run: wget ${{ github.server_url }}/maharmstone/tdscpp/releases/download/latest/tdscpp-dev.deb && apt install -y ./tdscpp-dev.deb
      - run: echo "SHORT_SHA=`echo ${{ github.sha }} | cut -c1-8`" >> $GITHUB_ENV
      - run: git clone ${{ github.server_url }}/${{ github.repository }} ${SHORT_SHA}
      - run: cd ${SHORT_SHA} && git checkout ${{ github.sha }}
      - run: mkdir -p debug-work
      - run: mkdir -p release-work
      - run: |
          cmake -DCMAKE_BUILD_TYPE=Debug \
            -DCMAKE_INSTALL_PREFIX=${PWD}/install/debug \
            -S ${SHORT_SHA} -B debug-work && \
          cmake --build debug-work --parallel `nproc` && \
          cmake --install debug-work
      - run: |
          cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo \
            -DCMAKE_INSTALL_PREFIX=${PWD}/install \
            -S ${SHORT_SHA} -B release-work && \
          cmake --build release-work --parallel `nproc` && \
          cmake --install release-work
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ github.sha }}
          overwrite: true
          path: |
            install
